import fs from 'fs';
import { google } from 'googleapis';
import readline from 'readline';

const SCOPES = ['https://www.googleapis.com/auth/youtube.upload'];
const TOKEN_PATH = './youtube_token.json';
const CREDENTIALS_PATH = './youtube_oauth.json';

function loadCredentials() {
    return JSON.parse(fs.readFileSync(CREDENTIALS_PATH, 'utf-8'));
}

function authorize(credentials) {
    const { client_secret, client_id, redirect_uris } = credentials.installed;
    const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]);

    if (fs.existsSync(TOKEN_PATH)) {
        const token = fs.readFileSync(TOKEN_PATH);
        oAuth2Client.setCredentials(JSON.parse(token));
        return oAuth2Client;
    } else {
        return getAccessToken(oAuth2Client);
    }
}

function getAccessToken(oAuth2Client) {
    const authUrl = oAuth2Client.generateAuthUrl({
        access_type: 'offline',
        scope: SCOPES,
    });
    console.log('ðŸ”‘ Authorize this app by visiting this URL:', authUrl);

    const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout,
    });

    return new Promise((resolve, reject) => {
        rl.question('Enter the code from that page here: ', (code) => {
            rl.close();
            oAuth2Client.getToken(code, (err, token) => {
                if (err) return reject(err);
                oAuth2Client.setCredentials(token);
                fs.writeFileSync(TOKEN_PATH, JSON.stringify(token));
                console.log('âœ… Token stored to', TOKEN_PATH);
                resolve(oAuth2Client);
            });
        });
    });
}

export async function uploadToYouTube(videoPath, title = 'Auto Upload', description = 'Generated by automation', privacyStatus = 'unlisted') {
    const credentials = loadCredentials();
    const auth = await authorize(credentials);
    const youtube = google.youtube({ version: 'v3', auth });

    const res = await youtube.videos.insert({
        part: ['snippet', 'status'],
        requestBody: {
            snippet: { title, description },
            status: { privacyStatus },
        },
        media: {
            body: fs.createReadStream(videoPath),
        },
    });

    console.log('ðŸŽ¥ Uploaded to YouTube: https://youtube.com/watch?v=' + res.data.id);
    return res.data;
}
